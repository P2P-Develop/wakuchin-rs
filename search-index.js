var searchIndex = JSON.parse('{\
"wakuchin":{"doc":"Core functions of wakuchin tools","t":[5,0,5,5,0,0,5,5,0,5,5,3,13,4,13,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,5,5],"n":["check","convert","gen","gen_vec","result","symbol","validate","validate_external","worker","chars_to_wakuchin","wakuchin_to_chars","Hit","Json","ResultOutputFormat","Text","WakuchinResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chars","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","hit_on","hits","hits_n","init","init","init","into","into","into","out","serialize","serialize","to_owned","tries","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","WAKUCHIN","WAKUCHIN_C","WAKUCHIN_EXTERNAL","WAKUCHIN_EXTERNAL_C","WAKUCHIN_EXTERNAL_K","WAKUCHIN_EXTERNAL_N","WAKUCHIN_EXTERNAL_W","WAKUCHIN_K","WAKUCHIN_N","WAKUCHIN_W","run_par","run_seq"],"q":["wakuchin","","","","","","","","","wakuchin::convert","","wakuchin::result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wakuchin::symbol","","","","","","","","","","wakuchin::worker",""],"d":["Check wakuchin string with specified regular expression. …","Wakuchin conversion functions","Generate a randomized wakuchin string.","Generate a vector of randomized wakuchin string. This …","Functions to manipulate the result of a research","Wakuchin symbol definitions","Check if a string is a internally used wakuchin string.","Check if a string is a wakuchin string.","Wakuchin researcher main functions","Convert from internally used wakuchin chars to actual …","Convert from actual wakuchin chars to internally used …","Used when the researcher detects a hit","JSON output","The output format of the result","Text output","The result of a research","","","","","","","Wakuchin characters that were hit","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The index of the hit","A vector of <code>Hit</code>","The number of hits","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return string of the result with specific output format.","","","","The number of tries","","","","","","","","","","","","","Internally used wakuchin chars","Internal wakuchin C","Externally used wakuchin chars","External wakuchin C","External wakuchin K","External wakuchin N","External wakuchin W","Internal wakuchin K","Internal wakuchin N","Internal wakuchin W","Research wakuchin with parallelism.","Research wakuchin with sequential. This function is useful …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,2,3,1,2,3,2,1,1,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,2,3,3,1,2,3,1,2,3,0,2,3,1,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[["str",0],["regex",3]],["bool",0]],null,[[["usize",0]],["string",3]],[[["usize",0],["usize",0]],["vec",3,[["string",3]]]],null,null,[[["str",0]],["bool",0]],[[["str",0]],["bool",0]],null,[[["str",0]],["string",3]],[[["str",0]],["string",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["resultoutputformat",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["resultoutputformat",4],["wakuchinresult",3]],["string",3]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["usize",0],["usize",0],["regex",3]],["wakuchinresult",3]],[[["usize",0],["usize",0],["regex",3]],["wakuchinresult",3]]],"p":[[4,"ResultOutputFormat"],[3,"Hit"],[3,"WakuchinResult"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};